p,
ol,
ul,
li,
dl,
dt,
dd,
blockquote,
figure,
fieldset,
legend,
textarea,
pre,
iframe,
hr,
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  padding: 0;
}

// Headings
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}

//
// Headings
//

%heading {
  font-family: $headings-font-family;
  font-style: $headings-font-style;
  font-weight: $headings-font-weight;
  line-height: $headings-line-height;
  color: $headings-color;
}


.h1 {
  @extend %heading;
  @include font-size($h1-font-size);
  margin-bottom: 0.5em;

  &:not(:first-child) {
    margin-top: 1em;
  }
}

.h2 {
  @extend %heading;
  @include font-size($h2-font-size);
  margin-bottom: 0.5714em;

  &:not(:first-child) {
    margin-top: 1.1428em;
  }
}

.h3 {
  @extend %heading;
  @include font-size($h3-font-size);
  margin-bottom: 0.6666em;

  &:not(:first-child) {
    margin-top: 1.3333em;
  }
}

.h4 {
  @extend %heading;
  @include font-size($h4-font-size);
  margin-bottom: 0.8em;
}

.h5 {
  @extend %heading;
  @include font-size($h5-font-size);
  margin-bottom: 0.8888em;
}

.h6 {
  @extend %heading;
  @include font-size($h6-font-size);
  margin-bottom: 1em
}



.lead {
  @include font-size($lead-font-size);
  font-weight: $lead-font-weight;
}

// Type display classes
@each $display, $font-size in $display-font-sizes {
  .display-#{$display} {
    @include font-size($font-size);
    font-weight: $display-font-weight;
    line-height: $display-line-height;
  }
}

//
// Emphasis
//
.small {
  @extend small;
}

.mark {
  @extend mark;
}

//
// Lists
//

.list-unstyled {
  @include list-unstyled();
}

// Inline turns list items into inline-block
.list-inline {
  @include list-unstyled();
}
.list-inline-item {
  display: inline-block;

  &:not(:last-child) {
    margin-right: $list-inline-padding;
  }
}


//
// Misc
//

// Builds on `abbr`
.initialism {
  @include font-size($initialism-font-size);
  text-transform: uppercase;
}

// Blockquotes
.blockquote {
  margin-bottom: $blockquote-margin-y;
  @include font-size($blockquote-font-size);
  background-color: $blockquote-background-color;
  border-left: $blockquote-border-left;
  padding: $blockquote-padding;

  > :last-child {
    margin-bottom: 0;
  }
}

.blockquote-footer {
  margin-top: -$blockquote-margin-y;
  margin-bottom: $blockquote-margin-y;
  @include font-size($blockquote-footer-font-size);
  color: $blockquote-footer-color;

  &::before {
    content: "\2014\00A0"; // em dash, nbsp
  }
}

.img-fluid {
  @include img-fluid();
}

.#{$class-content-wrapper} {
  // Typography

  p,
  dl,
  ol,
  ul,
  blockquote,
  pre,
  table {
    &:not(:last-child) {
      margin-bottom: 1em;
    }
  }

  h1 {
    @extend .h1;
  }

  h2 {
    @extend .h2;
  }

  h3 {
    @extend .h3;
  }

  h4 {
    @extend .h4;
  }

  h5 {
    @extend .h5;
  }

  h6 {
    @extend .h6;
  }


  img {
     @include img-fluid();
  }

  // Lists

  ol,
  ul {
    margin-top: 1em;
    padding-left: 2em;
  }


  ol ol,
  ul ul,
  ol ul,
  ul ol {
    margin-top: 0.5em
  }

  ul {
    list-style: disc outside;

    ul {
      list-style-type: circle;

      ul {
        list-style-type: square
      }
    } 
  }

  ol {
    list-style-position: outside;

    &:not([type]) {
      list-style-type: decimal;

      &.is-lower-alpha {
        list-style-type: lower-alpha;
      }
      &.is-lower-roman {
        list-style-type: lower-roman;
      }
      &.is-upper-alpha {
        list-style-type: upper-alpha;
      }
      &.is-upper-roman {
        list-style-type: upper-roman;
      }
    }
  }

  li + li {
    margin-bottom: 0.25em;
  }

  dt {
    font-weight: $dt-font-weight;
  }


  dd {
    margin-bottom: .5em;
    margin-left: 2em;
  }


  // Blockquote

  blockquote {
    @extend .blockquote;
  }

  
  // Links

  a {
    color: $link-color;
    text-decoration: $link-decoration;

    &:hover {
      color: $link-hover-color;
      text-decoration: $link-hover-decoration;
    }
  }

  // And undo these styles for placeholder links/named anchors (without href).
  // It would be more straightforward to just use a[href] in previous block, but that
  // causes specificity issues in many other styles that are too complex to fix.
  // See https://github.com/twbs/bootstrap/issues/19402

  a:not([href]):not([class]) {
    &,
    &:hover {
      color: inherit;
      text-decoration: none;
    }
  }


  figure {
    padding-left: 2em;
    padding-right: 2em;
    text-align: center;

    &:not(:first-child) {
      margin-top: 2em;
    }
      
    &:not(:last-child) {
      margin-bottom: 2em;
    }
      
    img {
      display: inline-block;
    }
      
    figcaption {
      font-style: italic;
    }
  }

  // Code

  pre {
  display: block;
  margin-top: 0; // 1
  overflow: auto; // 3
  @include font-size($code-font-size);
  color: $pre-color;
  padding: $pre-padding;
  background-color: $pre-background-color;

    // Account for some code outputs that place code tags in pre tags
    code {
      @include font-size(inherit);
      color: inherit;
      word-break: normal;
    }
  }

  code {
    @include font-size($code-font-size);
    color: $code-color;
    word-wrap: break-word;

    // Streamline the style when inside anchors to avoid broken underline and more
    a > & {
      color: inherit;
    }
  }

  kbd {
    padding: $kbd-padding-y $kbd-padding-x;
    @include font-size($kbd-font-size);
    color: $kbd-color;
    background-color: $kbd-bg;
    @include border-radius($border-radius-sm);

    kbd {
      padding: 0;
      @include font-size(1em);
      font-weight: $nested-kbd-font-weight;
    }
  }

  // Mark

  mark {
    padding: $mark-padding;
    background-color: $mark-bg;
  }
}